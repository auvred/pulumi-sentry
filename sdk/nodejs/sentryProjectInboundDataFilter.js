"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SentryProjectInboundDataFilter = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Sentry Project Inbound Data Filter resource. This resource is used to create and manage inbound data filters for a project. For more information on what filters are available, see the [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sentry from "@pulumiverse/sentry";
 *
 * const _default = new sentry.SentryProject("default", {
 *     organization: "my-organization",
 *     teams: [
 *         "my-first-team",
 *         "my-second-team",
 *     ],
 *     platform: "javascript",
 * });
 * // Create an inbound data filter for a project
 * const testSentryProjectInboundDataFilter = new sentry.SentryProjectInboundDataFilter("testSentryProjectInboundDataFilter", {
 *     organization: _default.organization,
 *     project: _default.id,
 *     filterId: "browser-extensions",
 *     active: true,
 * });
 * // Create an inbound data filter with subfilters. Only applicable to the
 * // `legacy-browser` filter.
 * const testIndex_sentryProjectInboundDataFilterSentryProjectInboundDataFilter = new sentry.SentryProjectInboundDataFilter("testIndex/sentryProjectInboundDataFilterSentryProjectInboundDataFilter", {
 *     organization: _default.organization,
 *     project: _default.id,
 *     filterId: "legacy-browser",
 *     subfilters: [
 *         "ie_pre_9",
 *         "ie9",
 *     ],
 * });
 * ```
 */
class SentryProjectInboundDataFilter extends pulumi.CustomResource {
    /**
     * Get an existing SentryProjectInboundDataFilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SentryProjectInboundDataFilter(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SentryProjectInboundDataFilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SentryProjectInboundDataFilter.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["active"] = state ? state.active : undefined;
            resourceInputs["filterId"] = state ? state.filterId : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["subfilters"] = state ? state.subfilters : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.filterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filterId'");
            }
            if ((!args || args.organization === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organization'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            resourceInputs["active"] = args ? args.active : undefined;
            resourceInputs["filterId"] = args ? args.filterId : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["subfilters"] = args ? args.subfilters : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SentryProjectInboundDataFilter.__pulumiType, name, resourceInputs, opts);
    }
}
exports.SentryProjectInboundDataFilter = SentryProjectInboundDataFilter;
/** @internal */
SentryProjectInboundDataFilter.__pulumiType = 'sentry:index/sentryProjectInboundDataFilter:SentryProjectInboundDataFilter';
//# sourceMappingURL=sentryProjectInboundDataFilter.js.map