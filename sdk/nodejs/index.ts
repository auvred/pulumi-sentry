// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./getSentryKey";
export * from "./getSentryOrganization";
export * from "./provider";
export * from "./sentryDefaultKey";
export * from "./sentryKey";
export * from "./sentryOrganization";
export * from "./sentryPlugin";
export * from "./sentryProject";
export * from "./sentryRule";
export * from "./sentryTeam";

// Export sub-modules:
import * as config from "./config";

export {
    config,
};

// Import resources to register:
import { SentryDefaultKey } from "./sentryDefaultKey";
import { SentryKey } from "./sentryKey";
import { SentryOrganization } from "./sentryOrganization";
import { SentryPlugin } from "./sentryPlugin";
import { SentryProject } from "./sentryProject";
import { SentryRule } from "./sentryRule";
import { SentryTeam } from "./sentryTeam";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "sentry:index/sentryDefaultKey:SentryDefaultKey":
                return new SentryDefaultKey(name, <any>undefined, { urn })
            case "sentry:index/sentryKey:SentryKey":
                return new SentryKey(name, <any>undefined, { urn })
            case "sentry:index/sentryOrganization:SentryOrganization":
                return new SentryOrganization(name, <any>undefined, { urn })
            case "sentry:index/sentryPlugin:SentryPlugin":
                return new SentryPlugin(name, <any>undefined, { urn })
            case "sentry:index/sentryProject:SentryProject":
                return new SentryProject(name, <any>undefined, { urn })
            case "sentry:index/sentryRule:SentryRule":
                return new SentryRule(name, <any>undefined, { urn })
            case "sentry:index/sentryTeam:SentryTeam":
                return new SentryTeam(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("sentry", "index/sentryDefaultKey", _module)
pulumi.runtime.registerResourceModule("sentry", "index/sentryKey", _module)
pulumi.runtime.registerResourceModule("sentry", "index/sentryOrganization", _module)
pulumi.runtime.registerResourceModule("sentry", "index/sentryPlugin", _module)
pulumi.runtime.registerResourceModule("sentry", "index/sentryProject", _module)
pulumi.runtime.registerResourceModule("sentry", "index/sentryRule", _module)
pulumi.runtime.registerResourceModule("sentry", "index/sentryTeam", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("sentry", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:sentry") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
