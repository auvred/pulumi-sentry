"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SentryIntegrationOpsgenie = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Manage an Opsgenie team integration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sentry from "@pulumi/sentry";
 * import * as sentry from "@pulumiverse/sentry";
 *
 * const opsgenie = sentry.getSentryOrganizationIntegration({
 *     organization: "my-organization",
 *     providerKey: "opsgenie",
 *     name: "my-pagerduty-organization",
 * });
 * // Associate a Opsgenie service and integration key with a Sentry Opsgenie integration
 * const test = new sentry.SentryIntegrationOpsgenie("test", {
 *     organization: "my-organization",
 *     integrationId: opsgenie.then(opsgenie => opsgenie.id),
 *     team: "my-opsgenie-team",
 *     integrationKey: "c6100908-5c5d-4905-8436-2448fad41bee",
 * });
 * ```
 *
 * ## Import
 *
 * import using the organization slug from the URL:
 *
 * https://sentry.io/api/0/organizations/[org-slug]/integrations/
 *
 * [integration-id] is the top-level `id` of the Opsgenie organization integration
 *
 * [service-id] is the `id` of the service_table record to import under the configData property
 *
 * ```sh
 * $ pulumi import sentry:index/sentryIntegrationOpsgenie:SentryIntegrationOpsgenie default org-slug/integration-id/service-id
 * ```
 */
class SentryIntegrationOpsgenie extends pulumi.CustomResource {
    /**
     * Get an existing SentryIntegrationOpsgenie resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SentryIntegrationOpsgenie(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SentryIntegrationOpsgenie.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SentryIntegrationOpsgenie.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["integrationId"] = state ? state.integrationId : undefined;
            resourceInputs["integrationKey"] = state ? state.integrationKey : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["team"] = state ? state.team : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.integrationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationId'");
            }
            if ((!args || args.integrationKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationKey'");
            }
            if ((!args || args.organization === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organization'");
            }
            if ((!args || args.team === undefined) && !opts.urn) {
                throw new Error("Missing required property 'team'");
            }
            resourceInputs["integrationId"] = args ? args.integrationId : undefined;
            resourceInputs["integrationKey"] = args ? args.integrationKey : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["team"] = args ? args.team : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SentryIntegrationOpsgenie.__pulumiType, name, resourceInputs, opts);
    }
}
exports.SentryIntegrationOpsgenie = SentryIntegrationOpsgenie;
/** @internal */
SentryIntegrationOpsgenie.__pulumiType = 'sentry:index/sentryIntegrationOpsgenie:SentryIntegrationOpsgenie';
