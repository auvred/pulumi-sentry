// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sentry
{
    public static class GetSentryOrganization
    {
        /// <summary>
        /// ## # sentry.SentryOrganization Data Source
        /// 
        /// Sentry Organization data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Sentry = Pulumi.Sentry;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var org = Output.Create(Sentry.GetSentryOrganization.InvokeAsync(new Sentry.GetSentryOrganizationArgs
        ///         {
        ///             Slug = "my-organization",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSentryOrganizationResult> InvokeAsync(GetSentryOrganizationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSentryOrganizationResult>("sentry:index/getSentryOrganization:getSentryOrganization", args ?? new GetSentryOrganizationArgs(), options.WithDefaults());

        /// <summary>
        /// ## # sentry.SentryOrganization Data Source
        /// 
        /// Sentry Organization data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Sentry = Pulumi.Sentry;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var org = Output.Create(Sentry.GetSentryOrganization.InvokeAsync(new Sentry.GetSentryOrganizationArgs
        ///         {
        ///             Slug = "my-organization",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSentryOrganizationResult> Invoke(GetSentryOrganizationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSentryOrganizationResult>("sentry:index/getSentryOrganization:getSentryOrganization", args ?? new GetSentryOrganizationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSentryOrganizationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique URL slug for this organization.
        /// </summary>
        [Input("slug", required: true)]
        public string Slug { get; set; } = null!;

        public GetSentryOrganizationArgs()
        {
        }
    }

    public sealed class GetSentryOrganizationInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique URL slug for this organization.
        /// </summary>
        [Input("slug", required: true)]
        public Input<string> Slug { get; set; } = null!;

        public GetSentryOrganizationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSentryOrganizationResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InternalId;
        /// <summary>
        /// The human readable name for this organization.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The unique URL slug for this organization.
        /// </summary>
        public readonly string Slug;

        [OutputConstructor]
        private GetSentryOrganizationResult(
            string id,

            string internalId,

            string name,

            string slug)
        {
            Id = id;
            InternalId = internalId;
            Name = name;
            Slug = slug;
        }
    }
}
